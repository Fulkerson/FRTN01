package batchtank_messages;

//option optimize_for = LITE_RUNTIME;

enum Sensor {
    TEMP = 1;
    LEVEL = 2;
    IN_PUMP_RATE = 3;
    OUT_PUMP_RATE = 4;
    HEATER_RATE = 5;
    MIXER_RATE = 6;
    COOLER_RATE = 7;
}

enum Output {
    HEATER = 1;
    COOLER = 2;
    IN_PUMP = 3;
    OUT_PUMP = 4;
    MIXER = 5;
}

message BaseMessage {
    repeated Sample sample = 1;
    repeated ControlSignal signal = 2;
    optional Register register = 3;
    repeated Sensor getSensor = 4;
    repeated Output getOutput = 5;
    optional bool endConnection = 6;
}

// Used for registering for a period time etc. 
message Register {
    repeated Sensor type = 1;
    // period in millis.
    required uint64 periodTime = 2;
}

message ControlSignal {
    required int32 value = 1;
    required int32 ref = 2;
    required Output type = 3;
}

message Sample {
    required int32 value = 1;
    required Sensor type = 2;
}

